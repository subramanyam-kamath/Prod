name: Compare two branche

on:
  push:
    branches:
      - main

jobs:
  sync_folder:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source repository
      - name: Checkout Repo 1
        uses: actions/checkout@v2

      
      - name: Copy Form Builder and Common Folder
        run: |
           npm install snyk@latest -g
           npm install snyk-to-html -g
           snyk auth  ${{secrets.SNYK_AUTH_TOKEN}}
      - name: scan the file
        run: |
         mkdir scan-reports
         snyk code test $PWD/force-app/core-package/main/default/classes/sf_lms_DocusignService.cls --json-file-output=results.json --report --project-name="LMSProject" || true
         
         
      - name: Upload SARIF file
        uses: actions/upload-artifact@v3
        with:
          name: scan-report
          path: scan-reports/results-code.html

    


  salesforce-code-analyzer-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Check out files
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli@latest

      - name: Install Salesforce Code Analyzer Plugin
        run: sf plugins install @salesforce/sfdx-scanner@latest

      - name: Run Salesforce Code Analyzer
        id: run-code-analyzer
        uses: forcedotcom/run-code-analyzer@v1
        with:
          run-command: run
          run-arguments: --normalize-severity --target . --outfile results.html
          results-artifact-name: salesforce-code-analyzer-results

      - name: Check the outputs to determine whether to fail
        if: |          
          steps.run-code-analyzer.outputs.num-sev1-violations > 0           
        run: exit 1


      - name: Run Salesforce Code Analyzer
        id: run-code-analyzer2
        uses: forcedotcom/run-code-analyzer@v1
        with:
          run-command: run dfa
          run-arguments: --normalize-severity --target . --outfile results2.html
          results-artifact-name: salesforce-code-analyzer-results2

      - name: Check the outputs to determine whether to fail
        if: |          
          steps.run-code-analyzer2.outputs.num-sev1-violations > 0           
        run: exit 1
      

     
