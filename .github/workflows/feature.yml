name: GitHub Actions Developer Org
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: 
  push:
    branches:
      - 'feature/**'
    paths:
      - 'force-app/**'

jobs:   
    validate-deployment-on-develop-org:        
        runs-on: ubuntu-latest
        environment: developer
        steps:            
            - uses: actions/setup-node@v3
              with:
                node-version: '18'

            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0       
            

            - name: Get Apex test class names
              id: vars
              run: echo ::set-output name=version::$(find . -type f -iregex '.*\.cls' -not -iregex '.*node\_modules.*' -exec grep -Eil --color '@IsTest' {} \; | grep -oE '[^/]*$' | sed 's/.cls//g' | sort | uniq | paste -sd "," -)
            - name: Passing the test class names to Env variable
              run: echo "Read_File_Content= ${{ steps.vars.outputs.version }}" >> $GITHUB_ENV
            - name: Name of the apex test classes
              run: echo ${{env.Read_File_Content}}    
            
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

           
            - name: 'Installing sfdx git delta'
              run: | 
                   echo y | sfdx plugins:install sfdx-git-delta
                    sfdx plugins 
                    
                  
             
            
            - name: 'Installing java'
              run: |
                sudo apt-get update
                sudo apt install default-jdk

            
            - name: 'Installing SFDX scanner'
              run: sfdx plugins:install @salesforce/sfdx-scanner

            
            - name: Decrypt the server.key.enc file & store inside assets folder
              run: openssl enc -nosalt -aes-256-cbc -d -in ${{ secrets.ENCRYPTION_KEY_FILE }} -out ${{ secrets.JWT_KEY_FILE }} -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}
              

            
            - name: Authenticate Salesforce ORG
              run: |
                sfdx force:auth:jwt:grant --clientid ${{ secrets.HUB_CONSUMER_KEY }} --jwtkeyfile ${{ secrets.JWT_KEY_FILE }} --username ${{ secrets.HUB_USER_NAME }} --setdefaultdevhubusername -a HubOrg
                
                
            - name: Generate the package.xml for delta files
              run: |
                mkdir delta
                sfdx sgd:source:delta --to ${{github.ref}} --from origin/QA-Org  --output "./delta" --ignore-whitespace -d -i .sgdignore
                echo "--- package.xml generated with added and modified metadata ---"
                cat delta/package/package.xml
                
            - name: 'Check-only full deploy changes - run specified tests'
              if: ${{ github.event.head_commit.message == 'DeltaDeploy' }}
              run: |
                  echo ${{github.event.head_commit.message}}
                   sfdx force:source:deploy -x delta/package/package.xml -c --testlevel NoTestRun  -u HubOrg
                 # sfdx force:source:deploy -x delta/package/package.xml -c --testlevel RunSpecifiedTests --runtests ${{github.event.pull_request.body}}  -u HubOrg

            
            - name: 'Check-only deploy delta changes - run all tests'
              if: ${{ github.event.head_commit.message == 'FullDeploy' }}
              run: |
                  sfdx force:source:deploy -p force-app -c --testlevel RunLocalTests -u HubOrg

            
